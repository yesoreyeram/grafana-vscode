{
  "Grafana Default Configuration": {
    "prefix": "grafana-config",
    "body": ["app_mode = production", "instance_name = \\${HOSTNAME}", ""],
    "description": "Grafana Default Configuration"
  },
  "Grafana Configuration - Paths": {
    "prefix": "grafana-config-paths",
    "body": [
      "[paths]",
      "# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)",
      "data = data",
      "# Temporary files in `data` directory older than given duration will be removed",
      "temp_data_lifetime = 24h",
      "# Directory where grafana can store logs",
      "logs = data/log",
      "# Directory where grafana will automatically scan and look for plugins",
      "plugins = data/plugins",
      "# folder that contains provisioning config files that grafana will apply on startup and while running.",
      "provisioning = conf/provisioning",
      ""
    ],
    "description": "Grafana Configuration - Paths"
  },
  "Grafana Configuration - Server": {
    "prefix": "grafana-config-server",
    "body": [
      "[server]",
      "# Protocol (http, https, h2, socket)",
      "protocol = http",
      "",
      "# The ip address to bind to, empty will bind to all interfaces",
      "http_addr =",
      "",
      "# The http port to use",
      "http_port = 3000",
      "",
      "# The public facing domain name used to access grafana from a browser",
      "domain = localhost",
      "",
      "# Redirect to correct domain if host header does not match domain",
      "# Prevents DNS rebinding attacks",
      "enforce_domain = false",
      "",
      "# The full public facing url",
      "root_url = %(protocol)s://%(domain)s:%(http_port)s/",
      "",
      "# Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.",
      "serve_from_sub_path = false",
      "",
      "# Log web requests",
      "router_logging = false",
      "",
      "# the path relative working path",
      "static_root_path = public",
      "",
      "# enable gzip",
      "enable_gzip = false",
      "",
      "# https certs & key file",
      "cert_file =",
      "cert_key =",
      "",
      "# Unix socket path",
      "socket = /tmp/grafana.sock",
      "",
      "# CDN Url",
      "cdn_url ="
    ],
    "description": "Grafana Configuration - Server"
  },
  "Grafana Configuration - Database": {
    "prefix": "grafana-config-database",
    "body": [
      "[database]",
      "# You can configure the database connection by specifying type, host, name, user and password",
      "# as separate properties or as on string using the url property.",
      "",
      "# Either \"mysql\", \"postgres\" or \"sqlite3\", it's your choice",
      "type = sqlite3",
      "host = 127.0.0.1:3306",
      "name = grafana",
      "user = root",
      "# If the password contains # or ; you have to wrap it with triple quotes. Ex \"\"\"#password;\"\"\"",
      "password =",
      "# Use either URL or the previous fields to configure the database",
      "# Example: mysql://user:secret@host:port/database",
      "url =",
      "",
      "# Max idle conn setting default is 2",
      "max_idle_conn = 2",
      "",
      "# Max conn setting default is 0 (mean not set)",
      "max_open_conn =",
      "",
      "# Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)",
      "conn_max_lifetime = 14400",
      "",
      "# Set to true to log the sql calls and execution times.",
      "log_queries =",
      "",
      "# For \"postgres\", use either \"disable\", \"require\" or \"verify-full\"",
      "# For \"mysql\", use either \"true\", \"false\", or \"skip-verify\".",
      "ssl_mode = disable",
      "",
      "ca_cert_path =",
      "client_key_path =",
      "client_cert_path =",
      "server_cert_name =",
      "",
      "# For \"sqlite3\" only, path relative to data_path setting",
      "path = grafana.db",
      "",
      "# For \"sqlite3\" only. cache mode setting used for connecting to the database",
      "cache_mode = private"
    ],
    "description": "Grafana Configuration - Database"
  },
  "Grafana Configuration - Remote Cache": {
    "prefix": "grafana-config-remote_cache",
    "body": [
      "[remote_cache]",
      "# Either \"redis\", \"memcached\" or \"database\" default is \"database\"",
      "type = database",
      "",
      "# cache connectionstring options",
      "# database: will use Grafana primary database.",
      "# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=0,ssl=false`. Only addr is required. ssl may be 'true', 'false', or 'insecure'.",
      "# memcache: 127.0.0.1:11211",
      "connstr =",
      ""
    ],
    "description": "Grafana Configuration - Remote Cache"
  },
  "Grafana Configuration - Data Proxy": {
    "prefix": "grafana-config-dataproxy",
    "body": [
      "[dataproxy]",
      "",
      "# This enables data proxy logging, default is false",
      "logging = false",
      "",
      "# How long the data proxy waits before timing out, default is 30 seconds.",
      "# This setting also applies to core backend HTTP data sources where query requests use an HTTP client with timeout set.",
      "timeout = 30",
      "",
      "# How many seconds the data proxy waits before sending a keepalive request.",
      "keep_alive_seconds = 30",
      "",
      "# How many seconds the data proxy waits for a successful TLS Handshake before timing out.",
      "tls_handshake_timeout_seconds = 10",
      "",
      "# How many seconds the data proxy will wait for a server's first response headers after",
      "# fully writing the request headers if the request has an \"Expect: 100-continue\"",
      "# header. A value of 0 will result in the body being sent immediately, without",
      "# waiting for the server to approve.",
      "expect_continue_timeout_seconds = 1",
      "",
      "# The maximum number of idle connections that Grafana will keep alive.",
      "max_idle_connections = 100",
      "",
      "# How many seconds the data proxy keeps an idle connection open before timing out.",
      "idle_conn_timeout_seconds = 90",
      "",
      "# If enabled and user is not anonymous, data proxy will add X-Grafana-User header with username into the request.",
      "send_user_header = false"
    ],
    "description": "Grafana Configuration - Data Proxy"
  },
  "Grafana Configuration - Analytics": {
    "prefix": "grafana-config-analytics",
    "body": [
      "[analytics]",
      "# Server reporting, sends usage counters to stats.grafana.org every 24 hours.",
      "# No ip addresses are being tracked, only simple counters to track",
      "# running instances, dashboard and error counts. It is very helpful to us.",
      "# Change this option to false to disable reporting.",
      "reporting_enabled = true",
      "",
      "# Set to false to disable all checks to https://grafana.com",
      "# for new versions (grafana itself and plugins), check is used",
      "# in some UI views to notify that grafana or plugin update exists",
      "# This option does not cause any auto updates, nor send any information",
      "# only a GET request to https://grafana.com to get latest versions",
      "check_for_updates = true",
      "",
      "# Google Analytics universal tracking code, only enabled if you specify an id here",
      "google_analytics_ua_id =",
      "",
      "# Google Tag Manager ID, only enabled if you specify an id here",
      "google_tag_manager_id =",
      ""
    ],
    "description": "Grafana Configuration - Analytics"
  },
  "Grafana Configuration - Security": {
    "prefix": "grafana-config-security",
    "body": [
      "[security]",
      "# disable creation of admin user on first start of grafana",
      "disable_initial_admin_creation = false",
      "",
      "# default admin user, created on startup",
      "admin_user = admin",
      "",
      "# default admin password, can be changed before first start of grafana, or in profile settings",
      "admin_password = admin",
      "",
      "# used for signing",
      "secret_key = SW2YcwTIb9zpOOhoPsMm",
      "",
      "# disable gravatar profile images",
      "disable_gravatar = false",
      "",
      "# data source proxy whitelist (ip_or_domain:port separated by spaces)",
      "data_source_proxy_whitelist =",
      "",
      "# disable protection against brute force login attempts",
      "disable_brute_force_login_protection = false",
      "",
      "# set to true if you host Grafana behind HTTPS. default is false.",
      "cookie_secure = false",
      "",
      "# set cookie SameSite attribute. defaults to `lax`. can be set to \"lax\", \"strict\", \"none\" and \"disabled\"",
      "cookie_samesite = lax",
      "",
      "# set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. default is false.",
      "allow_embedding = false",
      "",
      "# Set to true if you want to enable http strict transport security (HSTS) response header.",
      "# This is only sent when HTTPS is enabled in this configuration.",
      "# HSTS tells browsers that the site should only be accessed using HTTPS.",
      "strict_transport_security = false",
      "",
      "# Sets how long a browser should cache HSTS. Only applied if strict_transport_security is enabled.",
      "strict_transport_security_max_age_seconds = 86400",
      "",
      "# Set to true if to enable HSTS preloading option. Only applied if strict_transport_security is enabled.",
      "strict_transport_security_preload = false",
      "",
      "# Set to true if to enable the HSTS includeSubDomains option. Only applied if strict_transport_security is enabled.",
      "strict_transport_security_subdomains = false",
      "",
      "# Set to true to enable the X-Content-Type-Options response header.",
      "# The X-Content-Type-Options response HTTP header is a marker used by the server to indicate that the MIME types advertised",
      "# in the Content-Type headers should not be changed and be followed.",
      "x_content_type_options = true",
      "",
      "# Set to true to enable the X-XSS-Protection header, which tells browsers to stop pages from loading",
      "# when they detect reflected cross-site scripting (XSS) attacks.",
      "x_xss_protection = true",
      "",
      "# Enable adding the Content-Security-Policy header to your requests.",
      "# CSP allows to control resources the user agent is allowed to load and helps prevent XSS attacks.",
      "content_security_policy = false",
      "",
      "# Set Content Security Policy template used when adding the Content-Security-Policy header to your requests.",
      "# \\$NONCE in the template includes a random nonce.",
      "content_security_policy_template = \"\"\"script-src 'unsafe-eval' 'strict-dynamic' \\$NONCE;object-src 'none';font-src 'self';style-src 'self' 'unsafe-inline';img-src 'self' data:;base-uri 'self';connect-src 'self' grafana.com;manifest-src 'self';media-src 'none';form-action 'self';\"\"\"",
      ""
    ],
    "description": "Grafana Configuration - Security"
  },
  "Grafana Configuration - Snapshots": {
    "prefix": "grafana-config-snapshots",
    "body": [
      "[snapshots]",
      "# snapshot sharing options",
      "external_enabled = true",
      "external_snapshot_url = https://snapshots-origin.raintank.io",
      "external_snapshot_name = Publish to snapshot.raintank.io",
      "",
      "# Set to true to enable this Grafana instance act as an external snapshot server and allow unauthenticated requests for",
      "# creating and deleting snapshots.",
      "public_mode = false",
      "",
      "# remove expired snapshot",
      "snapshot_remove_expired = true"
    ],
    "description": "Grafana Configuration - Snapshots"
  },
  "Grafana Configuration - Dashboards": {
    "prefix": "grafana-config-dashboards",
    "body": [
      "[dashboards]",
      "# Number dashboard versions to keep (per dashboard). Default: 20, Minimum: 1",
      "versions_to_keep = 20",
      "",
      "# Minimum dashboard refresh interval. When set, this will restrict users to set the refresh interval of a dashboard lower than given interval. Per default this is 5 seconds.",
      "# The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.",
      "min_refresh_interval = 5s",
      "",
      "# Path to the default home dashboard. If this value is empty, then Grafana uses StaticRootPath + \"dashboards/home.json\"",
      "default_home_dashboard_path =",
      ""
    ],
    "description": "Grafana Configuration - Dashboards"
  },
  "Grafana Configuration - Datasources": {
    "prefix": "grafana-config-datasources",
    "body": [
      "[datasources]",
      "# Upper limit of data sources that Grafana will return. This limit is a temporary configuration and it will be deprecated when pagination will be introduced on the list data sources API.",
      "datasource_limit = 5000",
      ""
    ],
    "description": "Grafana Configuration - Datasources"
  },
  "Grafana Configuration - SMTP & EMAIL": {
    "prefix": "grafana-config-auth-smtp-email",
    "body": [
      "[smtp]",
      "enabled = false",
      "host = localhost:25",
      "user =",
      "# If the password contains # or ; you have to wrap it with triple quotes. Ex \"\"\"#password;\"\"\"",
      "password =",
      "cert_file =",
      "key_file =",
      "skip_verify = false",
      "from_address = admin@grafana.localhost",
      "from_name = Grafana",
      "ehlo_identity =",
      "startTLS_policy =",
      "",
      "[emails]",
      "welcome_email_on_sign_up = false",
      "templates_pattern = emails/*.html"
    ],
    "description": "Grafana Configuration - SMTP & EMAIL"
  },
  "Grafana Configuration - Quota": {
    "prefix": "grafana-config-quota",
    "body": [
      "[quota]",
      "enabled = false",
      "",
      "#### set quotas to -1 to make unlimited. ####",
      "# limit number of users per Org.",
      "org_user = 10",
      "",
      "# limit number of dashboards per Org.",
      "org_dashboard = 100",
      "",
      "# limit number of data_sources per Org.",
      "org_data_source = 10",
      "",
      "# limit number of api_keys per Org.",
      "org_api_key = 10",
      "",
      "# limit number of orgs a user can create.",
      "user_org = 10",
      "",
      "# Global limit of users.",
      "global_user = -1",
      "",
      "# global limit of orgs.",
      "global_org = -1",
      "",
      "# global limit of dashboards",
      "global_dashboard = -1",
      "",
      "# global limit of api_keys",
      "global_api_key = -1",
      "",
      "# global limit on number of logged in users.",
      "global_session = -1"
    ],
    "description": "Grafana Configuration - Quota"
  },
  "Grafana Configuration - Alerting": {
    "prefix": "grafana-config-alerting",
    "body": [
      "[alerting]",
      "# Disable alerting engine & UI features",
      "enabled = true",
      "# Makes it possible to turn off alert rule execution but alerting UI is visible",
      "execute_alerts = true",
      "",
      "# Default setting for new alert rules. Defaults to categorize error and timeouts as alerting. (alerting, keep_state)",
      "error_or_timeout = alerting",
      "",
      "# Default setting for how Grafana handles nodata or null values in alerting. (alerting, no_data, keep_state, ok)",
      "nodata_or_nullvalues = no_data",
      "",
      "# Alert notifications can include images, but rendering many images at the same time can overload the server",
      "# This limit will protect the server from render overloading and make sure notifications are sent out quickly",
      "concurrent_render_limit = 5",
      "",
      "# Default setting for alert calculation timeout. Default value is 30",
      "evaluation_timeout_seconds = 30",
      "",
      "# Default setting for alert notification timeout. Default value is 30",
      "notification_timeout_seconds = 30",
      "",
      "# Default setting for max attempts to sending alert notifications. Default value is 3",
      "max_attempts = 3",
      "",
      "# Makes it possible to enforce a minimal interval between evaluations, to reduce load on the backend",
      "min_interval_seconds = 1",
      "",
      "# Configures for how long alert annotations are stored. Default is 0, which keeps them forever.",
      "# This setting should be expressed as an duration. Ex 6h (hours), 10d (days), 2w (weeks), 1M (month).",
      "max_annotation_age =",
      "",
      "# Configures max number of alert annotations that Grafana stores. Default value is 0, which keeps all alert annotations.",
      "max_annotations_to_keep ="
    ],
    "description": "Grafana Configuration - Alerting"
  },
  "Grafana Configuration - Annotations": {
    "prefix": "grafana-config-annotations",
    "body": [
      "[annotations.dashboard]",
      "# Dashboard annotations means that annotations are associated with the dashboard they are created on.",
      "",
      "# Configures how long dashboard annotations are stored. Default is 0, which keeps them forever.",
      "# This setting should be expressed as a duration. Examples: 6h (hours), 10d (days), 2w (weeks), 1M (month).",
      "max_age =",
      "",
      "# Configures max number of dashboard annotations that Grafana stores. Default value is 0, which keeps all dashboard annotations.",
      "max_annotations_to_keep =",
      "",
      "[annotations.api]",
      "# API annotations means that the annotations have been created using the API without any",
      "# association with a dashboard.",
      "",
      "# Configures how long Grafana stores API annotations. Default is 0, which keeps them forever.",
      "# This setting should be expressed as a duration. Examples: 6h (hours), 10d (days), 2w (weeks), 1M (month).",
      "max_age =",
      "",
      "# Configures max number of API annotations that Grafana keeps. Default value is 0, which keeps all API annotations.",
      "max_annotations_to_keep ="
    ],
    "description": "Grafana Configuration - Annotations"
  },
  "Grafana Configuration - Explore": {
    "prefix": "grafana-config-explore",
    "body": ["[explore]", "# Enable the Explore section", "enabled = true", ""],
    "description": "Grafana Configuration - Explore"
  },
  "Grafana Configuration - Metrics": {
    "prefix": "grafana-config-metrics",
    "body": [
      "[metrics]",
      "enabled              = true",
      "interval_seconds     = 10",
      "# Disable total stats (stat_totals_*) metrics to be generated",
      "disable_total_stats = false",
      "",
      "#If both are set, basic auth will be required for the metrics endpoint.",
      "basic_auth_username =",
      "basic_auth_password =",
      "",
      "# Metrics environment info adds dimensions to the `grafana_environment_info` metric, which",
      "# can expose more information about the Grafana instance.",
      "[metrics.environment_info]",
      "#exampleLabel1 = exampleValue1",
      "#exampleLabel2 = exampleValue2",
      "",
      "# Send internal Grafana metrics to graphite",
      "[metrics.graphite]",
      "# Enable by setting the address setting (ex localhost:2003)",
      "address =",
      "prefix = prod.grafana.%(instance_name)s."
    ],
    "description": "Grafana Configuration - Metrics"
  },
  "Grafana Configuration - Grafana.com Integration": {
    "prefix": "grafana-config-grafana_com",
    "body": [
      "[grafana_net]",
      "url = https://grafana.com",
      "",
      "[grafana_com]",
      "url = https://grafana.com"
    ],
    "description": "Grafana Configuration - Grafana.com Integration"
  },
  "Grafana Configuration - Tracing jaeger": {
    "prefix": "grafana-config-tracing-jaeger",
    "body": [
      "[tracing.jaeger]",
      "# jaeger destination (ex localhost:6831)",
      "address =",
      "# tag that will always be included in when creating new spans. ex (tag1:value1,tag2:value2)",
      "always_included_tag =",
      "# Type specifies the type of the sampler: const, probabilistic, rateLimiting, or remote",
      "sampler_type = const",
      "# jaeger samplerconfig param",
      "# for \"const\" sampler, 0 or 1 for always false/true respectively",
      "# for \"probabilistic\" sampler, a probability between 0 and 1",
      "# for \"rateLimiting\" sampler, the number of spans per second",
      "# for \"remote\" sampler, param is the same as for \"probabilistic\"",
      "# and indicates the initial sampling rate before the actual one",
      "# is received from the mothership",
      "sampler_param = 1",
      "# sampling_server_url is the URL of a sampling manager providing a sampling strategy.",
      "sampling_server_url =",
      "# Whether or not to use Zipkin span propagation (x-b3- HTTP headers).",
      "zipkin_propagation = false",
      "# Setting this to true disables shared RPC spans.",
      "# Not disabling is the most common setting when using Zipkin elsewhere in your infrastructure.",
      "disable_shared_zipkin_spans = false",
      ""
    ],
    "description": "Grafana Configuration - Tracing jaeger"
  },
  "Grafana Configuration - Rendering": {
    "prefix": "grafana-config-rendering",
    "body": [
      "[rendering]",
      "# Options to configure a remote HTTP image rendering service, e.g. using https://github.com/grafana/grafana-image-renderer.",
      "# URL to a remote HTTP image renderer service, e.g. http://localhost:8081/render, will enable Grafana to render panels and dashboards to PNG-images using HTTP requests to an external service.",
      "server_url =",
      "# If the remote HTTP image renderer service runs on a different server than the Grafana server you may have to configure this to a URL where Grafana is reachable, e.g. http://grafana.domain/.",
      "callback_url =",
      "# Concurrent render request limit affects when the /render HTTP endpoint is used. Rendering many images at the same time can overload the server,",
      "# which this setting can help protect against by only allowing a certain amount of concurrent requests.",
      "concurrent_render_request_limit = 30",
      ""
    ],
    "description": "Grafana Configuration - Rendering"
  },
  "Grafana Configuration - Panels": {
    "prefix": "grafana-config-panel",
    "body": [
      "[panels]",
      "# here for to support old env variables, can remove after a few months",
      "enable_alpha = false",
      "disable_sanitize_html = false",
      ""
    ],
    "description": "Grafana Configuration - Panels"
  },
  "Grafana Configuration - Plugins": {
    "prefix": "grafana-config-plugins",
    "body": [
      "[plugins]",
      "enable_alpha = false",
      "app_tls_skip_verify_insecure = false",
      "# Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature.",
      "allow_loading_unsigned_plugins =",
      "marketplace_url = https://grafana.com/grafana/plugins/"
    ],
    "description": "Grafana Configuration - Plugins"
  },
  "Grafana Configuration - enterprise": {
    "prefix": "grafana-config-enterprise",
    "body": ["[enterprise]", "license_path ="],
    "description": "Grafana Configuration - enterprise"
  },
  "Grafana Configuration - Feature Toggles": {
    "prefix": "grafana-config-feature_toggles",
    "body": [
      "[feature_toggles]",
      "# enable features, separated by spaces",
      "enable ="
    ],
    "description": "Grafana Configuration - Feature Toggles"
  },
  "Grafana Configuration - Date Fomrats": {
    "prefix": "grafana-config-date_formats",
    "body": [
      "[date_formats]",
      "# For information on what formatting patterns that are supported https://momentjs.com/docs/#/displaying/",
      "",
      "# Default system date format used in time range picker and other places where full time is displayed",
      "full_date = YYYY-MM-DD HH:mm:ss",
      "",
      "# Used by graph and other places where we only show small intervals",
      "interval_second = HH:mm:ss",
      "interval_minute = HH:mm",
      "interval_hour = MM/DD HH:mm",
      "interval_day = MM/DD",
      "interval_month = YYYY-MM",
      "interval_year = YYYY",
      "",
      "# Experimental feature",
      "use_browser_locale = false",
      "",
      "# Default timezone for user preferences. Options are 'browser' for the browser local timezone or a timezone name from IANA Time Zone database, e.g. 'UTC' or 'Europe/Amsterdam' etc.",
      "default_timezone = browser",
      ""
    ],
    "description": "Grafana Configuration - Date Fomrats"
  },
  "Grafana Configuration - Expressions": {
    "prefix": "grafana-config-expressions",
    "body": [
      "[expressions]",
      "# Enable or disable the expressions functionality.",
      "enabled = true"
    ],
    "description": "Grafana Configuration - Expressions"
  }
}
